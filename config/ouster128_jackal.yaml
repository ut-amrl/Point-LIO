common:
    lid_topic:  "/ouster_points"
    imu_topic:  "/imu/data"
    con_frame: false # true: if you need to combine several LiDAR frames into one
    con_frame_num: 1 # the number of frames combined
    cut_frame: false # true: if you need to cut one LiDAR frame into several subframes
    cut_frame_time_interval: 0.1 # should be integral fraction of 1 / LiDAR frequency 
    time_lag_imu_to_lidar: 0.0 # Time offset between LiDAR and IMU calibrated by other algorithms, e.g., LI-Init (find in Readme)
                               # the timesample of IMU is transferred from the current timeline to LiDAR's timeline by subtracting this value

preprocess:
    lidar_type: 3  # 1 Livox Avia LiDAR, 2 Velodyne LiDAR, 3 Ouster LiDAR
    scan_line: 128
    timestamp_unit: 3           # the unit of time/t field in the PointCloud2 rostopic: 0-second, 1-milisecond, 2-microsecond, 3-nanosecond.
    blind: 0.20

mapping:
    imu_en: true
    start_in_aggressive_motion: false # if true, a preknown gravity should be provided in following gravity_init
    extrinsic_est_en: false # for aggressive motion, set this variable false
    imu_time_inte: 0.05 # = 1 / frequency of IMU
    satu_acc: 30.0 # the saturation value of IMU's acceleration. not related to the units
    satu_gyro: 35 # the saturation value of IMU's angular velocity. not related to the units
    acc_norm: 9.81 # 1.0 for g as unit, 9.81 for m/s^2 as unit of the IMU's acceleration
    lidar_meas_cov: 0.1 # 0.01
    acc_cov_output: 500
    gyr_cov_output: 1000 
    b_acc_cov: 0.0001 
    b_gyr_cov: 0.0001 
    imu_meas_acc_cov: 0.1 #0.1 # 2
    imu_meas_omg_cov: 0.1 #0.1 # 2 
    gyr_cov_input: 0.01 # for IMU as input model
    acc_cov_input: 0.1 # for IMU as input model
    plane_thr: 0.1 # 0.05, the threshold for plane criteria, the smaller, the flatter a plane
    match_s: 81
    fov_degree: 180 
    det_range: 150.0
    gravity_align: true # true to align the z axis of world frame with the direction of gravity, and the gravity direction should be specified below
    gravity: [0.0, 0.0, -9.810] # [0.0, 9.810, 0.0] # gravity to be aligned
    gravity_init: [0.0, 0.0, -9.810] # [0.0, 9.810, 0.0] # # preknown gravity in the first IMU body frame, use when imu_en is false or start from a non-stationary state
    #extrinsic_T: [ 0.0, 0.0, 0.0 ]
    #extrinsic_R: [1, 0, 0,
                  #0, 1, 0,
                  #0, 0, 1]
    #extrinsic_T: [ 0.026369, -0.380790,  0.424666]
    #extrinsic_R: [ 0.971149,  0.238461,  0.002400,
                  #-0.238444,  0.970824,  0.025414,
                   #0.003731, -0.025253,  0.999674] # Jackal
    extrinsic_T: [ 0.03134830, -0.00852594, -0.1005490]
    extrinsic_R: [ 0.99970800,  0.00460475, -0.0237382,
                  -0.00385304,  0.99949300,  0.0316158,
                   0.02387170, -0.03151510,  0.9992180] # CODa
    #extrinsic_T: [-0.034803, 0.010012, 0.424886]
    #extrinsic_R: [-0.999956, -0.009424, -0.000055,
                   #0.009421, -0.999790,  0.018200,
                  #-0.000226,  0.018199,  0.999834] # Wanda

odometry: 
    publish_odometry_without_downsample: false

publish:
    path_en: true                 # false: close the path output
    scan_publish_en: true         # false: close all the point cloud output
    scan_bodyframe_pub_en: true  # true: output the point cloud scans in IMU-body-frame

pcd_save:
    pcd_save_en: false
    interval: -1                 # how many LiDAR frames saved in each pcd file; 
                                 # -1 : all frames will be saved in ONE pcd file, may lead to memory crash when having too much frames.
